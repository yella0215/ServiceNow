<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1552560_training_incident_new</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1552560_training_incident_new">assigned_toISNOTEMPTY^assignment_groupVALCHANGES^assignment_groupISNOTEMPTY^EQ<item endquery="false" field="assigned_to" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="assignment_group" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="assignment_group" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Abort changes on group</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var assigned_to = current.assigned_to;
	var assignment_group = current.assignment_group;

	var grp = new GlideRecord('sys_user_grmember');
	grp.addQuery('group.sys_id', assignment_group);
	grp.addQuery('user', assigned_to);
	grp.query();

	if(!grp.hasNext())
	{
		gs.addErrorMessage(gs.getMessage("Assigned to user {0} must be member of Assignment group {1} ",[assigned_to.getDisplayValue(),assignment_group.getDisplayValue()]));
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-17 06:03:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0775f567473112103d806042d16d4311</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Abort changes on group</sys_name>
        <sys_overrides/>
        <sys_package display_value="Training Scope" source="x_1552560_training">060d016f47d952103d806042d16d4314</sys_package>
        <sys_policy/>
        <sys_scope display_value="Training Scope">060d016f47d952103d806042d16d4314</sys_scope>
        <sys_update_name>sys_script_0775f567473112103d806042d16d4311</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-17 06:03:08</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0775f567473112103d806042d16d4311"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>0775f567473112103d806042d16d4311</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-17 06:03:08</sys_created_on>
        <sys_id>b9067527473112103d806042d16d4342</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-17 06:03:08</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
